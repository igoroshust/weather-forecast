igeo e9f1ba1d0e4d4d97b9dfcf56676cd848
openweather 31b587bff5db15ec3cb64694f809d8c7




                {countries.map((country) => country.capital ? <Country key={country.alpha3Code} name={country.name.common} capital={country.capital} /> :
                 <Country key={country.alpha3Code} name={country.name.common} />)}



Countries.tsx
import * as React from "react";
import { YMaps } from "react-yandex-maps";
import axios from "axios";
import "../styles/Countries.css";
import Table from 'react-bootstrap/Table';
import Button from 'react-bootstrap/Button';
import Country from "./Country";

function Countries() {
    const [countries, setCountries] = React.useState([]);

    if(!countries.length) {
        axios.get("https://api.openweathermap.org/data/2.5/weather?lat=44.34&lon=10.99&appid=3f1bc5548adac751f33f188b7776bcbf").then(res => {
            console.log(res);
         })
    }
    return (
        <h1>Hello</h1>

    )
}

export default Countries;


Alerts.tsx
import * as React from "react";
import Alert from "react-bootstrap/Alert";

function Alerts(props) {
    let children = props.children;
    return (
        <>
            { React.Children.map(children, (child, index) => {
                if(index < 2) {
                    return child;
                }
             })
            }
        </>
    );
}

export default Alerts;

Country.tsx
import * as React from "react";
import Button from "react-bootstrap/Button";
import "../styles/Country.css";
import PropTypes from "prop-types";


function Country({name, capital}) {
    const [selected, changeSelected] = React.useState(false);

    return (
        <tr className={ selected ? "selected-country": ""}>
            <td>{name}</td>
            <td>{capital}</td>
            <td>
                { selected ?
                    <Button variant="danger" onClick={() => changeSelected(false)}>Remove</Button> :
                    <Button variant="success" onClick={() => changeSelected(true)}>Add</Button>
                }
            </td>
        </tr>
    );
}

Country.defaultProps = {
    capital: "Not Available"
};

//Country.propTypes = {
//    country: PropTypes.object,
//    count: PropTypes.number
//};

export default Country;

Header.tsx
import * as React from "react";
import "../styles/Header.css";

function Header(props) {
    // let count = 0;

    /* setNewCount отвечает за изменение Count */
    let [count, setNewCount] = React.useState(0); /* 0 - значение по умолчанию переменной count */

    const handleClick = () => {
        setNewCount(count + 1);
        console.log('Вы кликнули по кнопке!', count++);
    }

    return (
            <header>weather-forecast
                <button className={"some-button"} onClick={handleClick}>
                {props.buttonName} clicked {count} times</button>
            </header>
        )
}



/* Вариант синтаксиса (устаревший) */
//const handleClick = () => {
//    console.log('Вы кликнули по кнопке!');
//}
//
//class Header extends Component {
//    render() {
//        return (
//            <header>This is header
//                <button className={"some-button"} onClick={handleClick}>{buttonName}</button>
//            </header>
//        )
//    }
//}

export default Header;

Main.tsx
import * as React from "react";
import Countries from "./Countries";
import Alerts from "./Alerts";
import Alert from "react-bootstrap/Alert";
import "../styles/Main.css";

function Main () {

let alertText = "This is a alert-check it out!";

    return (
        <main>
            <Alerts>
                <Alert variant={"primary"}>
                    <strong>{ alertText }</strong>
                </Alert>
            </Alerts>
          <Countries />
        </main>
    )
}

export default Main;